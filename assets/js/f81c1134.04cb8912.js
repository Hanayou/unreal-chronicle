"use strict";(self.webpackChunkunreal_chronicle=self.webpackChunkunreal_chronicle||[]).push([[130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"steam-advanced-sessions-setup","metadata":{"permalink":"/blog/steam-advanced-sessions-setup","source":"@site/blog/2025-05-09-advanced-sessions-setup/2025-05-09-advanced-sessions-setup.md","title":"Steam Advanced Sessions Plugin Setup Guide","description":"How to use Steam Advanced Sessions Plugin in Unreal Engine using only Blueprints","date":"2025-05-09T00:00:00.000Z","tags":[{"inline":false,"label":"Multiplayer","permalink":"/blog/tags/multiplayer","description":"Articles for multiplayer and co-op play"},{"inline":false,"label":"Steam","permalink":"/blog/tags/steam","description":"Articles for Steam integration"},{"inline":false,"label":"Blueprints","permalink":"/blog/tags/blueprints","description":"Articles for blueprints"}],"readingTime":8.05,"hasTruncateMarker":true,"authors":[{"name":"Hanayou (Samuel Short)","title":"Adventurer","url":"https://hanayou.dev","page":{"permalink":"/blog/authors/all-hanayou-articles"},"socials":{"website":"https://hanayou.dev","youtube":"https://www.youtube.com/@HanayouDev","github":"https://github.com/Hanayou/"},"imageURL":"https://github.com/Hanayou.png","key":"hanayou"}],"frontMatter":{"title":"Steam Advanced Sessions Plugin Setup Guide","description":"How to use Steam Advanced Sessions Plugin in Unreal Engine using only Blueprints","slug":"steam-advanced-sessions-setup","authors":["hanayou"],"tags":["multiplayer","steam","blueprints"]},"unlisted":false,"nextItem":{"title":"Welcome to Unreal Chronicle \u2013 An Adventurer\u2019s Guide to Unreal Engine","permalink":"/blog/welcome"}},"content":"import YouTube from \'@site/src/components/YouTube\';\\n\\n\\nThis guide covers how set up the **Advanced Sessions Plugin** to allow you to play with friends over Steam using **Blueprints only**.\\n\\n\x3c!-- truncate --\x3e\\n\\n:::note\\nThis article assumes you already know the basics of Unreal Engine. It does not cover setting up UI or levels to keep the content focused. Future guides will cover these topics \u2014 stay tuned!\\n:::\\n\\n<YouTube id=\\"5nMKEKV0acI\\" title=\\"Steam Integration in Unreal Engine\\" />\\n\\n## \ud83e\udde9 Advanced Sessions Setup\\n\\n1. Download the [**Advanced Sessions plugin**](https://vreue4.com/advanced-sessions-binaries) version that matches your Unreal Engine version.\\n2. **Create or open your Unreal Project**.\\n   - The project must be a **C++ project**.\\n   - If you\'re using a Blueprint-only project, you can convert it to a C++ project by creating an **empty C++ class** at the top of the editor by going to **Tools -> New C++ Class**\\n     - In the window that opens, click next, then Create Class.\\n       ![UI to create a New C++ Class inside the Unreal Editor](new-cpp-class.webp)\\n3. **Copy plugin files**:\\n   - Copy the `AdvancedSteamSessions` and `AdvancedSessions` folders from the plugin download into your project folder\'s `/Plugins` folder.\\n     - If the `Plugins` folder doesn\u2019t exist, create it.\\n4. **Edit config**:\\n\\n   - Open your project\'s `DefaultEngine.ini` file inside the `Config` folder and add the following to the bottom of the file and save:\\n\\n   ```ini\\n   [/Script/Engine.GameEngine]\\n   +NetDriverDefinitions=(DefName=\\"GameNetDriver\\",DriverClassName=\\"OnlineSubsystemSteam.SteamNetDriver\\",DriverClassNameFallback=\\"OnlineSubsystemUtils.IpNetDriver\\")\\n\\n   [OnlineSubsystem]\\n   DefaultPlatformService=Steam\\n\\n   [OnlineSubsystemSteam]\\n   bEnabled=true\\n   SteamDevAppId=480\\n\\n   [/Script/OnlineSubsystemSteam.SteamNetDriver]\\n   NetConnectionClassName=\\"OnlineSubsystemSteam.SteamNetConnection\\"\\n   ```\\n\\n   This config change does the following:\\n\\n   - Tells Unreal to use Steam\u2019s networking driver (`SteamNetDriver`) by default, falling back to IP networking (`IpNetDriver`) if Steam isn\u2019t available.\\n   - Sets Steam as the default platform for online services.\\n     - All networking features (sessions, matchmaking, friends, etc.) will use Steam\'s systems.\\n   - `bEnabled=true`: Activates the Steam Online Subsystem.\\n   - `SteamDevAppId=480`: Uses the Spacewar test app (ID: 480) for development.\\n     - This is Valve\u2019s default app ID for testing multiplayer with Steam.\\n   - Ensures that peer-to-peer connections use Steam rather than raw IP sockets.\\n\\n5. **Add `steam_appid.txt`**:\\n\\n   - In the **root folder** of your project, create a file called `steam_appid.txt`.\\n   - It should contain a single line:\\n\\n     ```\\n     480\\n     ```\\n\\n     :::info\\n     The `steam_appid.txt` file is only required during development to tell your application what Steam AppID to use when integrating with the Steam API. When your game is launched through Steam (rather than from your local file system), the Steam client automatically provides the AppID, so this file isn\'t required in shipping builds.\\n     :::\\n\\n6. **Test Steam overlay**:\\n\\n   - Launch a **standalone** game from the editor.\\n   - The Steam overlay (Shift + Tab) should now appear.\\n   - You may need to **restart the editor** to properly import the plugins and enable overlay functionality.\\n\\n   ![Steam overlay triggering in bottom-right when the game starts up](steam-overlay.webp)\\n\\n---\\n\\n## \ud83d\udd27 Session Creation and Joining\\n\\n1. **Create a Game Instance**:\\n   While the Advanced Sessions functionality can be called from any blueprints, it\'s typically best to call from within a game instance, as this is always globally available and exists for the entire lifetime our game is running.\\n\\n   - Create a Blueprint class inheriting from `AdvancedFriendsGameInstance` called `BP_GameInstance`.\\n\\n   :::info\\n   The `AdvancedFriendsGameInstance` is a child of the standard `GameInstance` class provided by the Advanced Sessions plugin. It provides several pre-defined delegate functions for friend-related events such as:\\n\\n   - OnPlayerLoginChanged\\n   - OnSessionInviteReceived\\n   - OnSessionInviteAccepted\\n   - And many more...\\n\\n   <br/>\\n   as well as setting up several other systems for tracking friend-related behaviour. As such, it\'s highly recommended that you use it in your project if possible.\\n   :::\\n\\n2. **Create two events inside BP_GameInstance**:\\n\\n   - **Create Session**:\\n     ![Blueprint graph showing setup for Create Session](create-session.webp)\\n\\n     - Use the `Create Advanced Session` node to create a session.\\n     - Make sure the **Player Controller** is connected.\\n     - `OnSuccess` use `Open Level` with `listen` added to the Options parameter\\n\\n   - **Join Session (via invite)**:\\n     ![Blueprint graph showing setup for Join Session](join-session.webp)\\n     - Use `OnSessionInviteAccepted` to respond to friends accepting game invites (this is only available when using the `AdvancedFriendsGameInstance` or a subclass of it).\\n     - Use `Join Session` node, being sure to pass in the `Player Controller` and `Session to Join`.\\n\\n3. **Create a menu widget**:\\n\\n   This guide doesn\'t cover how to make UI or have it appear on the users screen.\\n   ![Screenshot of the menu widget blueprint](menu-widget.webp)\\n\\n   - Add buttons and blueprint logic for:\\n\\n     - **Creating a Session**\\n       ![Screenshot of the menu widget\'s blueprint for create session](create-join-session.webp)\\n     - **Finding and Joining a Session**\\n\\n       - The below blueprint is a very simple and naive way of joining the first session found. In practice, you should return the array of results from `FindSessionsAdvanced` and display these in a server browser UI.\\n         :::warning\\n         Be sure to connect the `Player Controller` and increase the `Max Results` from it\'s default of 0 for the `FindAdvancedSessions` node.\\n         :::\\n         ![Screenshot of the menu widget\'s blueprint for find & join session](find-join-session.webp)\\n\\n4. **Set GameInstance**:\\n   - Go to **Project Settings \u2192 Maps & Modes**.\\n   - Set the default GameInstance class to your `BP_GameInstance`.\\n     ![Setting game instance in project settings.](project-settings-game-instance-class.webp)\\n\\n---\\n\\n## \ud83e\uddea Testing Multiplayer in the Editor\\n\\n1. In the **play dropdown** (next to the play button), set:\\n   - **Number of Players**: `2`\\n   - **Net Mode**: `Play As Listen Server`\\n2. Press **Play**.\\n   - Two windows will open.\\n   - Create a session in one and join from the other.\\n\\n:::tip\\nThis is still **local** testing and does not use Steam. This is useful for testing your multiplayer gameplay code in the editor, but does not validate if your Steam sessions work correctly. To see how to test Steam from a single computer, see [\ud83d\udda5\ufe0f Testing Steam Multiplayer Locally](#%EF%B8%8F-testing-steam-multiplayer-locally)\\n:::\\n\\n---\\n\\n## \ud83d\udda5\ufe0f Testing Steam Multiplayer Locally\\n\\n:::warning\\nThis step is **Windows-only** (although alternative sandboxing tools for other platforms do exist).\\n\\n- It uses Sandboxie Plus to run two Steam clients simultaneously.\\n- You\'ll need two separate Steam accounts.\\n  :::\\n\\n### Step 1: Sandboxie Plus\\n\\n[Download](https://sandboxie-plus.com/downloads/) and install the latest version of Sandboxie Plus.\\n\\n- Choose your version (`x64`, `ARM`, or `x86`) based on your system:\\n  - If you\'re unsure, in Windows go to the Settings app, then `System \u2192 About \u2192 Device Specifications \u2192 System Type` to check.\\n\\n### Step 2: Build Your Game\\n\\nIn Unreal Engine:\\n\\n1. Go to **Edit \u2192 Project Settings \u2192 Maps & Modes**.\\n2. Ensure you\'ve set the correct **Game Default Map**, typically your main menu level.\\n3. In the main editor window open the `Platforms` dropdown next to the play controls, `Windows \u2192 Package Project` (setting the Binary Configuration as needed) to build your game as a `.exe`.\\n   ![Unreal Editor screenshot showing how to build/package your project.](unreal-package-project.webp)\\n\\n### Step 3: Configure Sandboxie\\n\\n- Launch Sandboxie and find the default sandbox: `DefaultBox`.\\n  ![Screenshot of Sandboxie UI when first opened](sandboxie.webp)\\n- Right-click \u2192 `Sandbox Options` \u2192 `General Options \u2192 Run Menu (Tab at the top)`.\\n  - On the right-side of the window, click the dropdown next to `Add program` and select `Browse for Program`\\n- Add:\\n  - `Steam.exe` (usually in `C:\\\\Program Files (x86)\\\\Steam`)\\n  - Your packaged game `.exe`\\n    ![Screenshot of Sandboxie settings to add a program](sandboxie-settings.webp)\\n\\n### Step 4: Run Two Instances\\n\\n- Start Steam normally and log in to your **main** account.\\n- Start **Sandboxie**, then run Steam in the sandbox and log in to your **second** account.\\n  :::warning\\n  If using AppID 480, ensure both your Steam account and the sandboxed account have the same Download Region, which can be set in `Steam settings \u2192 Downloads \u2192 Download Region`.\\n  - The test AppID 480 has restrictions that require players to be using the same Download Region, so if these settings differ you will not find the other player\'s session.\\n  - When testing with friends online, they will also need to be in the same download region.\\n  - This limitation only applies to the AppID 480, so if you have your own AppID then this step is irrelevant.\\n    :::\\n- Launch your packaged game `.exe` directly and from Sandboxie.\\n\\nYou should now be able to:\\n\\n- Create a session on one client.\\n- Find and join the session on the other.\\n\\n:::note\\nIf Steam doesn\'t show the overlay in your packaged game, double-check:\\n\\n- `steam_appid.txt` exists and has `480`\\n- You\'re using a **packaged build**, not running in-editor\\n- Steam is running **before** the game starts\\n  :::\\n\\n---\\n\\n## \ud83d\udd25 FAQ / Errors\\n\\n### Unreal Engine\\n\\n- Unreal Engine versions 5.3 and earlier do not have Online Subsystem Steam enabled by default. You can enable this from the plugins window within the editor _(contributed by [@CallumPooleProgramme](https://www.youtube.com/@CallumPooleProgrammer))_\\n- The Steam Sockets plugin can cause issues with the Advanced Sessions plugin, so ensure that this is disabled (it is usually off by default in recent engine versions). _(contributed by [@daltoncave112](https://www.youtube.com/@daltoncave112))_\\n\\n### Sandboxie\\n\\n- > _When Sandboxie is the host, my client can discover session but can\'t join. When I host on my regular client, Sandboxie can\'t find the session._\\n\\n  This is due to Sandboxie restricting network behaviour. Resolving it requires you to declare a specific port and query port to run the sandboxed game client on. You can do this by:\\n\\n  - Opening your \'DefaultBox\' Options in Sandboxie, `General Options \u2192 Run Menu`. In the list of applications you\'ve added, double click on the path (in the command line column) of your client and add the following after the `.exe`:\\n\\n  ```bash\\n  --port=27015 --query-port=27016\\"\\n  ```\\n\\n  As a full example, this should look like:\\n\\n  ```bash\\n  \\"F:\\\\GameDev\\\\Projects\\\\SteamMultiplayer\\\\Build\\\\Windows\\\\SteamMultiplayer.exe\\" --port=27015 --query-port=27016\\n  ```\\n\\n  _(contributed by [@Lazaerus](https://www.youtube.com/@Lazaerus), [@mrruzvert](https://www.youtube.com/@mrruzvert))_\\n\\n## \u2705 Done!\\n\\nYou\u2019ve now set up and tested the **Steam Advanced Sessions Plugin** entirely using Blueprints.  \\nThis allows friends to host/join games via the Steam API with no C++ coding required.\\n\\n---\\n\\n\ud83e\uddd9\u200d\u2642\ufe0f _\u2013 Hanayou, Chronicler of Unreal_\\n\\nP.S. Want a future guide for matchmaking UI or persistent lobbies? Let me know!"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","source":"@site/blog/2025-05-03-launch/2025-05-03-launch.md","title":"Welcome to Unreal Chronicle \u2013 An Adventurer\u2019s Guide to Unreal Engine","description":"Embark on your Unreal Engine journey with guides, maps, and mystical knowledge to light your way.","date":"2025-05-03T00:00:00.000Z","tags":[{"inline":false,"label":"Announcement","permalink":"/blog/tags/announcement","description":"General announcements and updates"}],"readingTime":3.575,"hasTruncateMarker":true,"authors":[{"name":"Hanayou (Samuel Short)","title":"Adventurer","url":"https://hanayou.dev","page":{"permalink":"/blog/authors/all-hanayou-articles"},"socials":{"website":"https://hanayou.dev","youtube":"https://www.youtube.com/@HanayouDev","github":"https://github.com/Hanayou/"},"imageURL":"https://github.com/Hanayou.png","key":"hanayou"}],"frontMatter":{"title":"Welcome to Unreal Chronicle \u2013 An Adventurer\u2019s Guide to Unreal Engine","description":"Embark on your Unreal Engine journey with guides, maps, and mystical knowledge to light your way.","slug":"welcome","authors":["hanayou"],"tags":["announcement"]},"unlisted":false,"prevItem":{"title":"Steam Advanced Sessions Plugin Setup Guide","permalink":"/blog/steam-advanced-sessions-setup"}},"content":"import YouTube from \'@site/src/components/YouTube\';\\n\\n\\n> _\\"When the shadows are long and the blueprints grow tangled, one must seek the wisdom of the tomes...\\"_\\n\\nGreetings, brave soul!\\n\\nYou\u2019ve stumbled upon **Unreal Chronicle \u2013 An Adventurer\'s Guide to Unreal Engine**. Whether by fate, fortune, or fumbling through a corrupted project file, you are welcome here. This is a place for all adventurers of game development\u2014fresh apprentices or seasoned spell-casters of C++ and Blueprints alike.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\udc09 The Tale So Far...\\n\\nMany moons ago, I posted a [Steam Integration tutorial](https://www.youtube.com/watch?v=5nMKEKV0acI) on my YouTube channel, and to my surprise... it resonated with many fellow devs!\\n\\n<YouTube id=\\"5nMKEKV0acI\\" title=\\"Steam Integration in Unreal Engine\\" />\\n\\nThe response sparked something: whispers of requests for more, echoes of curiosity, and the realization that maybe, just maybe, there\u2019s a fellowship out there looking for something better than what we\u2019ve got now.\\n\\nStill, I didn\u2019t want to rush into battle unprepared. Life, after all, is filled with quests of its own\u2014work obligations, family, and my own personal game dev project that gnaws at my attention like a hungry mimic. So I waited, sharpened my tools, and charted a path.\\n\\n## \u2694\ufe0f The Dungeon of Existing Resources\\n\\nUnreal Engine\u2019s documentation is a decent spellbook... but for many brave adventurers\u2014especially beginners or those mid-way through their journey\u2014it often feels like it speaks in riddles.\\n\\nMany of the tutorials out there suffer from cursed conditions:\\n\\n- \ud83d\udcdc **Too vague**: Good outlines, but few practical, start-to-finish guides.\\n- \ud83d\udd35\ud83d\udfe6 **Divided camps**: Blueprint vs. C++ \u2014 few teach how they intertwine like fire and frost.\\n- \u23f3 **Lost in the fog of time**: 30-40 minute videos, often hiding the one golden nugget of wisdom - like finding a needle in a haystack.\\n- \ud83d\udd0d **Hard to find your way back**: Video formats make it tough to search or re-trace your steps quickly.\\n- \ud83d\udd10 **Too specific**: You often learn how to copy the tutorial you\'re following\u2014but not why it works. That leads to the familiar comments: \\"How do I add multiplayer?\\" or \\"How can I change it to X instead?\\" The arcane system remains locked without deeper understanding.\\n\\n## \ud83d\udee0\ufe0f A New Forge: What This Site Hopes to Be\\n\\n**Unreal Chronicle** is my answer to all that.\\n\\nHere\'s what I aim to create:\\n\\n- \u2728 **Concise, up-to-date guides** on real, day-to-day game dev workflows in Unreal Engine.\\n- \ud83d\udca1 **Cross-discipline knowledge**\u2014both Blueprint and C++ working in harmony. C++ isn\'t the mystical, impossibly hieroglyphic language it may seem\u2014it\'s absolutely worth learning. I want to help demystify it for those who\u2019ve never dared venture beyond Blueprints.\\n- \ud83d\udcda **Readable documentation**, for those who want to scan, refer, and learn at their own pace.\\n- \ud83c\udfa5 **YouTube video + written companion guides**, for visual learners _and_ those who prefer silent study.\\n- \ud83e\uddd9\u200d\u2642\ufe0f **A beginner\'s path**\u2014a journey from novice to confident dev, with guidance every step of the way.\\n\\n## \ud83c\udff0 Join the Fellowship\\n\\nThis is just the first page in a tome I hope will grow into something vast and valuable. My hope is that these guides become helpful scrolls for those just starting out, or reference materials for fellow developers looking to polish specific skills.\\n\\nSo ready your tools, fellow traveler. The dungeons of Unreal Engine await.\\n\\n### \ud83d\udcdc The Living Grimoire\\n\\nThis tome is not sealed.\\n\\nThe source code for **Unreal Chronicle**\u2014including every scroll, diagram, and incantation\u2014is open to brave souls via [GitHub](https://github.com/your-repo-here). If you spot a troublesome typo-beast, unclear incantation, or an ancient spell in need of modern context, your contributions are most welcome.\\n\\nTogether, we build this Chronicle\u2014not as lone mages in separate towers, but as a fellowship of knowledge-seekers crafting a clearer path through the Unreal wilds.\\n\\n> _\\"The chronicle begins... and the guild assembles.\\"_\\n\\nSee you in the next chapter.\\n\\n---\\n\\n\ud83e\uddd9\u200d\u2642\ufe0f _\u2013 Hanayou, Chronicler of Unreal_\\n\\n:::tip \ud83c\udfae Fun Fact: What\'s in a Name?\\n\\nThe name **Unreal Chronicle** is inspired not just by the fantasy genre at large, but also by one of my earliest and most magical RPG experiences: **_Dark Chronicle_** (known as _Dark Cloud 2_ in some regions), a magnificent and criminally underrated JRPG from Level-5. Its blend of gameplay, invention, and adventure left a permanent mark\u2014and this site\'s name is a quiet tribute to that spark of wonder.\\n\\n:::"}]}}')}}]);